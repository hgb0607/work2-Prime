//算法说明：
//1.埃氏筛法算质数（素数），其原理是在一定范围的数里，通过筛除2，3，4...的倍数的数，剩下的即为质数（素数）
//2.该程序中同过将数组中数值为非质数（素数）的个体用‘0’覆盖，这样剩下的非‘0’个体的值就是质数（素数）
//3.由于对于合数而言，其质因数最大不超过自身的二次方根，也就是说一个数最多被其自身的二次方根整除
//  故对于100以内的数，最多只需验证到被10整除即可

public class Prime {
	public static void main(String[] args) {
		int[] num = new int[101];					//定义一个101个空间的数组，num[0]~num[100]
		
		for (int i = 01; i < num.length; i++) {		//给数组填充值，其值与数组下标一致，如num[32]的值为“32”
			num[i] = i;
		}
		
		num[1] = 0;									//数值1不是质数（素数），首先排除，用数字“0”覆盖
		
		for (int i = 2; i < Math.sqrt(num.length); i++) {
													//第一层循环：设置倍数i从2开始被筛除，
			if (num[i]!=0) {						//只有当num[i]数组的值没有被筛除时（即其值没有被‘0’替换），才进行筛除判断
				for (int j = i; j*i < num.length; j++) {
					num[i*j] = 0;					//第二层循环：将i倍数全部置‘0’筛除
				}
			}
			
		}
		
		for(int n : num ) {							//将非‘0’(没有被筛除的)的数输出
			if(n!=0) {
					System.out.print(n+", ");
			}
		}
		
	}
}
